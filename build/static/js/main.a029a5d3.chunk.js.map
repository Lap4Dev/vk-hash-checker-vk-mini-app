{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","signUser.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","Persik","props","left","className","persik","alt","crypto","require","verifyLaunchParams","searchOrParsedUrlQuery","secretKey","sign","queryParams","processQueryParam","key","value","startsWith","push","formattedSearch","slice","split","Object","keys","length","queryString","sort","a","b","localeCompare","reduce","acc","idx","encodeURIComponent","createHmac","update","digest","toString","replace","secretKeyOfYourApp","startCheck","URL","globalThis","location","href","indexOf","bridge","send","user","userId","country","photos","console","log","includes","App","useState","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","subscribe","detail","type","data","fetchData","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a029a5d3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","const crypto = require('crypto');\r\n\r\n/**\r\n * @param searchOrParsedUrlQuery\r\n * @param {string} secretKey\r\n * @returns {boolean}\r\n */\r\nexport default function verifyLaunchParams(searchOrParsedUrlQuery, secretKey) {\r\n    let sign;\r\n    const queryParams = [];\r\n\r\n    /**\r\n     * @param key\r\n     * @param value\r\n     */\r\n    const processQueryParam = (key, value) => {\r\n        if (typeof value === 'string') {\r\n            if (key === 'sign') {\r\n                sign = value;\r\n            } else if (key.startsWith('vk_')) {\r\n                queryParams.push({ key, value });\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof searchOrParsedUrlQuery === 'string') {\r\n        const formattedSearch = searchOrParsedUrlQuery.startsWith('?')\r\n            ? searchOrParsedUrlQuery.slice(1)\r\n            : searchOrParsedUrlQuery;\r\n\r\n        for (const param of formattedSearch.split('&')) {\r\n            const [key, value] = param.split('=');\r\n            processQueryParam(key, value);\r\n        }\r\n    } else {\r\n        for (const key of Object.keys(searchOrParsedUrlQuery)) {\r\n            const value = searchOrParsedUrlQuery[key];\r\n            processQueryParam(key, value);\r\n        }\r\n    }\r\n\r\n    if (!sign || queryParams.length === 0) {\r\n        return false;\r\n    }\r\n    const queryString = queryParams\r\n        .sort((a, b) => a.key.localeCompare(b.key))\r\n        .reduce((acc, { key, value }, idx) => {\r\n            return acc + (idx === 0 ? '' : '&') + `${key}=${encodeURIComponent(value)}`;\r\n        }, '');\r\n\r\n    const paramsHash = crypto\r\n        .createHmac('sha256', secretKey)\r\n        .update(queryString)\r\n        .digest()\r\n        .toString('base64')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_')\r\n        .replace(/=$/, '');\r\n\r\n    return paramsHash === sign;\r\n}","import React, { useState, useEffect } from 'react';\n// import bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\n\nimport verifyLaunchParams from './signUser.js';\nimport bridge from '@vkontakte/vk-bridge';\nconst secretKeyOfYourApp = 'W11Q4F7GS2721s7cJWEi';\n\nasync function startCheck() {\n\t// Таким образом мы можем получить URL, который нам нужен для верификации пользователя :)\n\tconst URL = globalThis.location.href;\n\t// Собираем все query параметры из ссылки \n\tconst params = URL.slice(URL.indexOf('?') + 1);\n\t// Имиортируем ту самую функцию 'verifyLaunchParams' из файла 'signUser.js'. \n\t// Передаем те параметры и секретный ключ нашего приложения, который находится в настройках самого же приложения. \n\tif (verifyLaunchParams(params, secretKeyOfYourApp)){\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo'); // Обращаемся к bridge и отправляем событие \"VKWebAppGetUserInfo\".\n\t\t// В ответ мы получаем объект с данными о пользователе\n\t\tconst userId = user.id; // Тут я достаю ID пользователя\n\t\tconst first_name = user?.first_name; // Тут я достаю имя пользователя\n\t\tconst last_name = user?.last_name; // Тут я достаю фамилию пользователя\n\t\tconst country = user?.country?.title; // Тут я достаю страну пользователя\n\t\tconst city = user?.city?.title; // Тут я достаю город пользователя\n\t\tconst photos = []; // Сюда буду складывать URLs фотографий\n\t\tconsole.log(userId, first_name, last_name, country, city, photos);\n\t\tfor (let key in user) key.includes('photo') && photos.push(user[key]); // Если есть ключ, который содержит 'photo', я добавляю его в масиив 'photos'\n\t// Также вам нужно учти тот факт, если каких-то данных о пользователе не будет, тогда переменная примет 'undefined'. Вы можете делать проверку\n\t//если это нужно.\n\t}\n}\nstartCheck()\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\t\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\t// Запускаем проверку\n\t\t\tstartCheck()\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}